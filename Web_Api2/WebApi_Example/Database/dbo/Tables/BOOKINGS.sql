CREATE TABLE [dbo].[BOOKINGS] (
    [ID]            BIGINT   IDENTITY (1, 1) NOT NULL,
    [QTYPERSONS]    SMALLINT NOT NULL,
    [STARTDATE]     DATE     NOT NULL,
    [ENDDATE]       DATE     NOT NULL,
    [ETA]           DATETIME NULL,
    [TIMEARRIVAL]   DATETIME NULL,
    [TIMEDEPARTURE] DATETIME NULL,
    [SPECIALNEEDS]  TEXT     NULL,
    [EXTRABED]      BIT      CONSTRAINT [DF__BOOKINGS__EXTRAB__24927208] DEFAULT ((0)) NOT NULL,
    [PARKING]       BIT      CONSTRAINT [DF__BOOKINGS__PARKIN__25869641] DEFAULT ((0)) NOT NULL,
    [BREAKFAST]     BIT      CONSTRAINT [DF__BOOKINGS__BREAKF__267ABA7A] DEFAULT ((0)) NOT NULL,
    [CUSTOMERSID]   BIGINT   NOT NULL,
    [STAFFID]       INT      NULL,
    CONSTRAINT [PK_BOOKINGS] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [FK_BOOKINGS_ANSTALLDA_STAFF] FOREIGN KEY ([STAFFID]) REFERENCES [dbo].[STAFF] ([ID]),
    CONSTRAINT [FK_BOOKINGS_KUNDBOKNI_CUSTOMER] FOREIGN KEY ([CUSTOMERSID]) REFERENCES [dbo].[CUSTOMERS] ([ID])
);


GO
--TRIGGER SOM VID EN ÄNDRING I BOOKINGS KOLLAR OM KUNDEN CHECKAT IN
CREATE TRIGGER [dbo].[tr_CHECK_IN]
ON [dbo].[BOOKINGS]
FOR UPDATE
AS
	IF EXISTS(
		SELECT * FROM INSERTED
		WHERE TIMEARRIVAL IS NOT NULL)
	AND EXISTS(
		SELECT * FROM DELETED
		WHERE TIMEARRIVAL IS NULL)

		BEGIN
			DECLARE @CUSTID INT
				SELECT @CUSTID = CUSTOMERSID
				FROM INSERTED

			DECLARE @BOOKID INT
				SELECT @BOOKID = ID
				FROM INSERTED
	
			EXEC sp_CHECK_IN_TRANSACTION_TOKEN @CUSTID, @BOOKID
		END
GO
--TRIGGER NÄR MAN GÖR EN BOKNING OCH KOLLAR OM KUNDEN CHECKAT IN
CREATE TRIGGER [dbo].[tr_CHECK_NEW_BOOKING]
ON [dbo].[BOOKINGS]
FOR INSERT
AS
	IF EXISTS(
		SELECT * FROM INSERTED
		WHERE TIMEARRIVAL IS NOT NULL)

		BEGIN
			DECLARE @CUSTID INT
				SELECT @CUSTID = CUSTOMERSID
				FROM INSERTED

			DECLARE @BOOKID INT
				SELECT @BOOKID = ID
				FROM INSERTED

			EXEC sp_CHECK_IN_TRANSACTION_TOKEN @CUSTID, @BOOKID
		END
GO
--TRIGGER SOM KOLLAR OM EN KUND CHECKAT UT OCH ISF RÄKNAR UT TOTALKOSTNADEN FÖR VISTELSEN
CREATE TRIGGER [dbo].[tr_CHECK_OUT_ADD_TOTAL_COST]
ON [dbo].[BOOKINGS]
--PÅ CHECKOUT SÅ GÖRS EN UPDATE
FOR UPDATE
AS
	DECLARE @BOOKID INT
		SELECT @BOOKID = ID
		FROM INSERTED

	DECLARE @CUSTID INT
		SELECT @CUSTID = CUSTOMERSID
		FROM INSERTED

	IF EXISTS(
		SELECT * FROM INSERTED
		WHERE TIMEDEPARTURE IS NOT NULL)
	AND EXISTS(
		SELECT * FROM INSERTED
		WHERE TIMEARRIVAL IS NULL)

		BEGIN
			PRINT 'CUSTOMER HAS TO CHECK IN BEFORE A CHECK OUT
			'
			ROLLBACK
		END

	ELSE
		BEGIN
			IF EXISTS(
				SELECT * FROM INSERTED
				WHERE TIMEDEPARTURE IS NOT NULL)

				 BEGIN
					EXEC sp_UPDATE_PAYMENTS_TOTAL_COST @BOOKID, @CUSTID
				 END
		END